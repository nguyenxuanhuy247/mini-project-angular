@import '../../../style/mixins/index';
@import '../../input/style/mixin';
@import '../../button/style/mixin';
@import '../../grid/style/mixin';
@import './components';
@import './inline';
@import './horizontal';
@import './vertical';
@import './status';
@import './mixin';

@form-prefix-cls: ~'@{vts-prefix}-form';
@form-item-prefix-cls: ~'@{form-prefix-cls}-item';
@form-font-height: ceil(@font-size-base * @line-height-base);

.@{form-prefix-cls} {
  .reset-component();
  .reset-form();

  .@{form-prefix-cls}-text {
    display: inline-block;
    padding-right: 8px;
  }

  & {
    .formSize(xl, @input-padding-vertical-xl, @input-padding-horizontal-xl, @input-font-size-xl);
    .formSize(lg, @input-padding-vertical-lg, @input-padding-horizontal-lg, @input-font-size-lg);
    .formSize(md, @input-padding-vertical-md, @input-padding-horizontal-md, @input-font-size-md);
    .formSize(sm, @input-padding-vertical-sm, @input-padding-horizontal-sm, @input-font-size-sm);
    .formControlSize(xl, @control-height-xl);
    .formControlSize(lg, @control-height-lg);
    .formControlSize(md, @control-height-md);
    .formControlSize(sm, @control-height-sm);
  }

  > .@{form-item-prefix-cls}:last-child {
    margin-bottom: 0;
  }
}

.explainAndExtraDistance(@num) when (@num >= 0) {
  padding-top: floor(@num);
}

.explainAndExtraDistance(@num) when (@num < 0) {
  margin-top: ceil(@num);
  margin-bottom: ceil(@num);
}

// ================================================================
// =                             Item                             =
// ================================================================
.@{form-item-prefix-cls} {
  .reset-component();

  margin-bottom: @form-item-margin-bottom;
  vertical-align: top;

  &-hidden,
  &-hidden.@{vts-prefix}-row {
    // https://github.com/ant-design-git/ant-design-git/issues/26141
    display: none;
  }

  // ==============================================================
  // =                            Label                           =
  // ==============================================================
  &-label {
    display: inline-block;
    flex-grow: 0;
    overflow: hidden;
    white-space: nowrap;
    text-align: right;
    vertical-align: middle;

    &-left {
      text-align: left;
    }

    > label {
      position: relative;
      // display: inline;
      display: inline-flex;
      align-items: center;
      color: @form-label-color;
      font-size: inherit;

      > .@{iconfont-css-prefix} {
        vertical-align: top;
      }

      // Required mark
      &.@{form-item-prefix-cls}-required:not(.@{form-item-prefix-cls}-required-mark-optional)::after {
        display: inline-block;
        margin-right: 4px;
        color: @form-label-required-color;
        line-height: 1;
        content: '*';

        .@{form-prefix-cls}-hide-required-mark & {
          display: none;
        }
      }

      // Optional mark
      .@{form-item-prefix-cls}-optional {
        display: inline-block;
        margin-left: @margin-xss;
        color: @text-color-secondary;

        .@{form-prefix-cls}-hide-required-mark & {
          display: none;
        }
      }

      // Optional mark
      .@{form-item-prefix-cls}-tooltip {
        writing-mode: horizontal-tb;
        margin-inline-start: @margin-xss;
        color: @text-color-secondary;
      }

      &::after {
        & when (@form-item-trailing-colon=true) {
          content: ':';
        }
        & when not (@form-item-trailing-colon=true) {
          content: ' ';
        }

        position: relative;
        top: -0.5px;
        margin: 0 @form-item-label-colon-margin-right 0 @form-item-label-colon-margin-left;
      }

      &.@{form-item-prefix-cls}-no-colon::after {
        content: ' ';
      }
    }
  }

  // ==============================================================
  // =                            Input                           =
  // ==============================================================
  &-control {
    display: flex;
    flex-direction: column;
    flex-grow: 1;

    &:first-child:not([class^=~"'@{vts-prefix}-col-'"]):not([class*=~"' @{vts-prefix}-col-'"]) {
      width: 100%;
    }
  }

  &-control-input {
    position: relative;
    display: flex;
    align-items: center;
    height: 100%;

    &-content {
      flex: auto;
      max-width: 100%;
    }
  }

  &-explain,
  &-extra {
    clear: both;
    padding-top: @form-extra-padding-top;
    color: @text-color-secondary;
    font-size: inherit;
    line-height: @line-height-base;
    transition: color 0.3s @ease-out;
    white-space: pre-line;
  }

  .@{vts-prefix}-input-textarea-show-count {
    &::after {
      position: absolute;
      bottom: -22px;
      width: 100%;
    }
  }
}

.show-help-motion(@className, @keyframeName, @duration: @animation-duration-slow) {
  .make-motion(@className, @keyframeName, @duration);
  .@{className}-enter,
  .@{className}-appear {
    opacity: 0;
    animation-timing-function: @ease-in-out;
  }
  .@{className}-leave {
    animation-timing-function: @ease-in-out;
  }
}

.show-help-motion(show-help, antShowHelp, 0.3s);

@keyframes antShowHelpIn {
  0% {
    transform: translateY(-5px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes antShowHelpOut {
  to {
    transform: translateY(-5px);
    opacity: 0;
  }
}

// need there different zoom animation
// otherwise won't trigger anim
@keyframes diffZoomIn1 {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes diffZoomIn2 {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes diffZoomIn3 {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

@import './rtl';
